<!--
    IMPORTANT:
    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.
    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.
    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.
    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.
    - To remove a policy, delete the corresponding policy statement from the policy document.
    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.
    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.
    - Policies are applied in the order of their appearance, from the top down.
    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.
-->
<policies>
	<inbound>
		<base />
		<validate-jwt header-name="Autorization" failed-validation-httpcode="401">
			<!--<required-claims>
                <claim name="group" match="any">
                    <value>openai-team</value>
                </claim>
            </required-claims>-->
		</validate-jwt>
		<set-variable name="token" value="@(context.Request.Headers.GetValueOrDefault("Authorization","scheme param"))" />
		<send-request mode="new" response-variable-name="backend" timeout="20" ignore-error="true">
			<set-url>https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{resourceGroupName}}/providers/Microsoft.ApiManagement/service/{{serviceName}}/backends/{{backendId}}?api-version=2022-08-01</set-url>
			<set-method>GET</set-method>
			<set-header name="Authorization" exists-action="override">
				<value>@((string)context.Variables["token"])</value>
			</set-header>
			<set-header name="Content-Type" exists-action="override">
				<value>application/x-www-form-urlencoded</value>
			</set-header>
		</send-request>
		<trace source="Backend" severity="information">
			<message>Details of the backend specified by its identifier</message>
			<metadata name="backend" value="@((string)context.Variables["backend"])" />
			<metadata name="backendUrl" value="@((string)context.Variables["backendUrl"])" />
		</trace>
		<set-variable name="backendUrl" value="@{
            string response = (string)context.Variables["backend"];  
            JObject data = JObject.Parse(response);
            return ((string)data["properties.url"]);  
        }" />
	</inbound>
	<backend>
		<base />
	</backend>
	<outbound>
		<base />
	</outbound>
	<on-error>
		<base />
	</on-error>
</policies>