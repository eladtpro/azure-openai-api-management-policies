<!--
    IMPORTANT:
    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.
    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.
    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.
    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.
    - To remove a policy, delete the corresponding policy statement from the policy document.
    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.
    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.
    - Policies are applied in the order of their appearance, from the top down.
    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.
-->
<policies>
	<inbound>
		<base />
		<set-variable name="requestBody" value="@((string)context.Request.Body.As<string>(preserveContent: true))" />
		<set-header name="JWEAuthorization" exists-action="override">
			<value>Bearer @((string)context.Variables["maxAge"])</value>
		</set-header>
		<validate-jwt header-name="JWEAuthorization" failed-validation-httpcode="401" failed-validation-error-message="Unauthorized JWE" require-expiration-time="true" require-scheme="Bearer" require-signed-tokens="true" clock-skew="0">
			<!--<openid-config url="">-->
			<issuer-signing-keys>
				<key>29b4adf8bcc941dc8ce40a6d0227b6d3</key>
				<!--
                    <key>Base64 encoded signing key | certificate-id="mycertificate" | n="modulus" e="exponent"</key>
                    if there are multiple keys, then add additional key elements 
                 -->
			</issuer-signing-keys>
			<decryption-keys>
				<key>8524e3e6674e494f85c5c775dcd602c5</key>
				<!-- 
                    <key>Base64 encoded signing key | certificate-id="mycertificate" | n="modulus" e="exponent" </key>
                    if there are multiple keys, then add additional key elements 
                -->
			</decryption-keys>
			<audiences>
				<audience>api1</audience>
			</audiences>
			<issuers>
				<issuer>https://idp.example.com</issuer>
			</issuers>
			<required-claims>
				<claim name="sub" match="all">
					<value>elsa</value>
				</claim>
			</required-claims>
		</validate-jwt>
	</inbound>
	<backend>
		<base />
	</backend>
	<outbound>
		<base />
	</outbound>
	<on-error>
		<base />
	</on-error>
</policies>